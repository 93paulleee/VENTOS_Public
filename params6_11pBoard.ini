
include params1_General.ini

##########################################################
#                     Section 1                          #
##########################################################

[Config Ethernet_Sniffing]
description = "Sniffing Packets from Ethernet"

Network.TraCI.terminate = -1s   # no end to simulation 
Network.TraCI.connectAt = -1s   # no SUMO!

Network.sniffEthernet.on = true
Network.sniffEthernet.interface = "eth0"
Network.sniffEthernet.filter_exp = "ip"
Network.sniffEthernet.printCaptured = true
Network.sniffEthernet.printDataPayload = true
Network.sniffEthernet.printStat = true

#########################

[Config USB_Sniffing]
description = "Sniffing Packets from USB"

Network.TraCI.terminate = -1s   # no end to simulation 
Network.TraCI.connectAt = -1s   # no SUMO!

Network.sniffUSB.on = true
Network.sniffUSB.listUSBdevices = true
Network.sniffUSB.listUSBdevicesDetailed = false
Network.sniffUSB.hotPlug = false

Network.sniffUSB.target_vendor_id = 0x046d     #0x040b
Network.sniffUSB.target_product_id = 0xc52b    #0x2000
Network.sniffUSB.target_interfaceNumber = 2    #0
Network.sniffUSB.target_interruptEP = 0x83     #0x81

#########################

[Config Bluetooth_Scan]
description = "Scan for nearby Bluetooth devices"

Network.TraCI.terminate = -1s   # no end to simulation 
Network.TraCI.connectAt = -1s   # no SUMO!

Network.sniffBluetooth.listLocalDevices = true
Network.sniffBluetooth.BT_on = true
Network.sniffBluetooth.BT_scan_deviceID = 0

#########################

[Config BLE_Scan]
description = "Scan for nearby Bluetooth LE devices"

Network.TraCI.terminate = -1s   # no end to simulation 
Network.TraCI.connectAt = -1s   # no SUMO!

Network.sniffBluetooth.listLocalDevices = true
Network.sniffBluetooth.BLE_on = true
Network.sniffBluetooth.BLE_scan_deviceID = 1

#########################

[Config BLE_Advertisement]
description = "Advertising Beacons using Bluetooth LE"

Network.TraCI.terminate = -1s   # no end to simulation 
Network.TraCI.connectAt = -1s   # no SUMO!

Network.sniffBluetooth.listLocalDevices = true
Network.sniffBluetooth.BLE_advertisement = true
Network.sniffBluetooth.BLE_adv_deviceID = 0

Network.sniffBluetooth.BLE_adv_type = 3
Network.sniffBluetooth.BLE_beaconType = 0

# iBeacon parameters
# what UUID should be used in iBeacon? http://stackoverflow.com/questions/19499707/does-airlocate-only-look-for-particular-uuids
Network.sniffBluetooth.iBeacon_UUID = "e2 c5 6d b5 df fb 48 d2 b0 60 d0 f5 a7 10 96 e0"  # 16B of UUID
Network.sniffBluetooth.iBeacon_major = "00 02"
Network.sniffBluetooth.iBeacon_minor = "00 01"
Network.sniffBluetooth.iBeacon_TXpower = "c5"    # -59

# AltBeacon parameters
Network.sniffBluetooth.AltBeacon_MFGID = "18 01"  # â€‹Radius Networks, Inc.
Network.sniffBluetooth.AltBeacon_beaconID = "00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 00 01 00 02"  # 16B of UUID + 4B subdivided as needed
Network.sniffBluetooth.AltBeacon_refRSSI = "86"   # -122
Network.sniffBluetooth.AltBeacon_MFGRSVD = "78"

#########################

[Config BLE_Sniffing]
description = "Sniffing BLE advertising beacons"

Network.TraCI.terminate = -1s   # no end to simulation 
Network.TraCI.connectAt = -1s   # no SUMO!

Network.sniffBluetooth.listLocalDevices = true
Network.sniffBluetooth.dump_On = true
Network.sniffBluetooth.BLE_dump_deviceID = 1
Network.sniffBluetooth.sniff_time = 10s

##########################################################
#                     Section 2                          #
##########################################################

[Config Packets_Sniffing]
description = "Sniffing Packets from ethernet/USB/Bluetooth"

Network.TraCI.SUMOconfig = "sumo/CACC_Stream/6hello.sumo.cfg"
Network.TraCI.terminate = 600s

Network.statistics.collectVehiclesData = true
Network.statistics.vehicleDataLevel = 4

Network.sniffEthernet.on = true
Network.sniffEthernet.interface = "eth0"
Network.sniffEthernet.filter_exp = "ip"
Network.sniffEthernet.printCaptured = true
Network.sniffEthernet.printDataPayload = true
Network.sniffEthernet.printStat = true

Network.sniffUSB.on = false
Network.sniffUSB.listUSBdevices = true
Network.sniffUSB.listUSBdevicesDetailed = true
Network.sniffUSB.hotPlug = false

Network.sniffUSB.target_vendor_id = 0x046d     # 0x040b
Network.sniffUSB.target_product_id = 0xc52b    # 0x2000
Network.sniffUSB.target_interfaceNumber = 2    # 0
Network.sniffUSB.target_interruptEP = 0x83     # 0x81

Network.V[*].appl.SUMOvehicleDebug = false

Network.V[*].appl.plr = 0
Network.V[*].appl.droppT = 30s
Network.V[*].appl.droppV = "" 

Network.V[*].appl.measurementError = false
Network.V[*].appl.errorGap = 0.01
Network.V[*].appl.errorRelSpeed = 0.05

Network.addEntity.on = true
Network.addEntity.mode = 1
Network.addEntity.totalVehicles = 10
Network.addEntity.vehiclesType = ${vehiclesType= "TypeManual", "TypeACC1", "TypeCACC1"}
Network.addEntity.distribution = 1
Network.addEntity.interval = 1000ms

Network.warmup.on = true
Network.warmup.stopPosition = 5
Network.warmup.warmUpSpeed = 0    # complete stop at the warm-up phase
Network.warmup.waitingTime = 30

Network.speedprofile.on = true
Network.speedprofile.mode = ${speedProfile= 2, 6}
Network.speedprofile.minSpeed = 10
Network.speedprofile.normalSpeed = 20
Network.speedprofile.maxSpeed = 28    # in mode 2 (extrem case) veh1 does not go to 30 m/s to allow followers to catch-up
Network.speedprofile.switchTime = 80s
