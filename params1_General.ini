

################################################################################################
##       Do not modify any parameters in this file. It might affect multiple scenarios        ##
################################################################################################

# This file contains all the defined parameters with their default values.
# Overwrite the parameter with a new value in your "own section".
# Upon defining a new parameter, add it into this file with its default value.

[General]

##########################################################
#             Section 1: Simulation Parameters           #
##########################################################

cmdenv-express-mode = true
cmdenv-autoflush = true
cmdenv-status-frequency = 60s
cmdenv-performance-display = false

#tkenv-default-config = debug
#tkenv-default-run = 1
tkenv-image-path = bitmaps

record-eventlog = false
debug-on-errors = true
print-undisposed = false

network = c3po.application.Network

rng-class = cMersenneTwister   # rng algorithm
num-rngs = 1                   # number of random number generators 
seed-0-mt = 0   # seed for rng 0  


##########################################################
#         Section 2: Global Network parameters           #
##########################################################

Network.**.scalar-recording = false
Network.**.vector-recording = false

Network.**.debug = false
Network.**.coreDebug = false

Network.playgroundSizeX = 90025m
Network.playgroundSizeY = 40025m
Network.playgroundSizeZ = 50m

Network.SUMODirectory = "" 
Network.debugLevel = 0   # 0=no debug. Higher numbers output more debug info


##########################################################
#        Section 3: Global modules parameters            #
##########################################################

Network.annotations.draw = false

Network.obstacles.debug = false

Network.world.useTorus = false
Network.world.use2D = false

Network.connMan.pMax = 20mW
Network.connMan.sat = -89dBm
Network.connMan.alpha = 2.0
Network.connMan.carrierFrequency = 5.890e9 Hz
Network.connMan.sendDirect = true
Network.connMan.drawMaxIntfDist = true

Network.statistics.collectVehiclesData = false
Network.statistics.vehicleDataLevel = 1          # 1:record full vehicle statistics    2:for router scenario   3:for TL
Network.statistics.reportMAClayerData = false
Network.statistics.reportPlnManagerData = false
Network.statistics.reportBeaconsData = false

# trackingMode = 1: track a specific vehicle
# trackingMode = 2: move windows frame when all vehicles exit
Network.Tracking.on = false
Network.Tracking.zoom = 11512
Network.Tracking.initialWindowsOffset = 130
Network.Tracking.trackingInterval = 1
Network.Tracking.mode = 2
Network.Tracking.trackingV = "CACC5"      # in mode 1
Network.Tracking.trackingLane = "1to2_0"  # in mode 2
Network.Tracking.windowsOffset = 400      # in mode 2

Network.plotter.on = false


##########################################################
#             Section 4: TraCI Parameters                #
##########################################################

Network.TraCI.updateInterval = 0.1s
Network.TraCI.host = "localhost"
Network.TraCI.port = 9999
Network.TraCI.launchFile = "sumo_launchd.xml"

Network.TraCI.terminate = -1s 
Network.TraCI.autoShutdown = true   # shutdown if no module is present
Network.TraCI.equilibrium_vehicle = false

Network.TraCI.moduleType = "c3po.application.vehicle.vehicle"
Network.TraCI.moduleName = "V"
Network.TraCI.moduleDisplayString = ""

Network.TraCI.bikeModuleType = "c3po.application.bike.bicycle"
Network.TraCI.bikeModuleName = "B"
Network.TraCI.bikeModuleDisplayString = ""

Network.TraCI.pedModuleType = "c3po.application.pedestrian.pedestrian"
Network.TraCI.pedModuleName = "P"
Network.TraCI.pedModuleDisplayString = ""

Network.TraCI.seed = 0  # use the same seed in all instances
Network.TraCI.margin = 25

Network.TraCI.roiRects = ""
Network.TraCI.roiSquareSizeRSU = 0


##########################################################
#               Section 5: Traffic Light                 #
##########################################################

# TLControlMode = 0: no traffic light
# TLControlMode = 1: fix-time
# TLControlMode = 2: adaptive Webster
# TLControlMode = 3: traffic actuated
# TLControlMode = 4: highest queue size
# TLControlMode = 5: OJF (lowest delay)
# TLControlMode = 6: LQF_MWM_Phase
# TLControlMode = 7: LQF_MWM
# TLControlMode = 8: OJFM
# TLControlMode = 9: router
Network.TrafficLight.TLControlMode = 0

Network.TrafficLight.measureIntersectionQueue = false
Network.TrafficLight.measureTrafficDemand = false
Network.TrafficLight.measureTrafficDemandMode = 2    # =1: measure headway time  =2: measure total # of vehicles in a period (more accurate)
Network.TrafficLight.trafficDemandBuffSize = 10      # buffer size for storing traffic demands

# save to file
Network.TrafficLight.collectInductionLoopData = false
Network.TrafficLight.collectTLQueuingData = false
Network.TrafficLight.collectTLPhasingData = false
Network.TrafficLight.collectVehDelay = false

# parameters for collectVehDelay
Network.TrafficLight.deccelDelayThreshold = -1         # m/s^2 : vehicle/bike with decel less than this value is considered delayed
Network.TrafficLight.vehStoppingDelayThreshold = 5.0   # m/s   : vehicle with speed less than this value is considered stopped 
Network.TrafficLight.bikeStoppingDelayThreshold = 0.4  # m/s   : bike with speed less than this value is considered stopped 
Network.TrafficLight.lastValueBuffSize = 10            # how much further we need to look at speed/accel data to mark the delay start

# general parameters
Network.TrafficLight.minGreenTime = 8.3s    # long enough to clear the queue (5 vehicles)
Network.TrafficLight.maxGreenTime = 20.0s   # about twice as minGreenTime --should not exceed green time in fix-time (bigger value negatively affect performance!)
Network.TrafficLight.yellowTime = 4.0s      # yellow time should be >= 3s
Network.TrafficLight.redTime = 2.0s
Network.TrafficLight.maxCycleLength = 120s

# adaptive Webster
Network.TrafficLight.alpha = 0.125

# traffic actuated
Network.TrafficLight.greenExtension = true
Network.TrafficLight.passageTime = -1s    # -1 : passage time is calculated precisely for each incoming lane (might not be realistic!)
                                          # > 0: value set by the user (2.0s gives good results if LD is at 35m distance)
# highest queue
Network.TrafficLight.maxQueueSize = -1    # max queue has the accurate queue size information

# router
Network.TrafficLight.HighDensityRecalculateFrequency = 30
Network.TrafficLight.LowDensityExtendTime = 3
Network.TrafficLight.TLLogicMode = 0          # 0=no TLControl, 1=HighDensity, 2=LowDensity 3=Cooperative
Network.TrafficLight.MaxPhaseDuration = 60    # Low density/Cooperative will not extend traffic lights to last longer than this
Network.TrafficLight.MinPhaseDuration = 10    # Cooperative control will not assign a phase duration shorter than this


##########################################################
#            Section 6: Cobalt Controller                #
##########################################################

Network.cobalt.on = false
Network.cobalt.IPAddress = "cobalt.ece.ucdavis.edu"
Network.cobalt.port = "501"


##########################################################
#               Section 7: Ethernet Sniffer              #
##########################################################

Network.sniffEthernet.on = false
Network.sniffEthernet.interface = "eth0"
Network.sniffEthernet.filter_exp = "ip"
Network.sniffEthernet.printCaptured = false
Network.sniffEthernet.printDataPayload = false
Network.sniffEthernet.printStat = false


##########################################################
#               Section 8: USB Sniffer                   #
##########################################################

Network.sniffUSB.on = false
Network.sniffUSB.listUSBdevices = false
Network.sniffUSB.listUSBdevicesDetailed = false
Network.sniffUSB.hotPlug = false

Network.sniffUSB.target_vendor_id = 0x0
Network.sniffUSB.target_product_id = 0x0
Network.sniffUSB.target_interfaceNumber = 0
Network.sniffUSB.target_interruptEP = 0x80


##########################################################
#                   Section 9: Bluetooth                 #
##########################################################

# --------------------------------------------------------
#                       BL Sniffer                       #
# --------------------------------------------------------
Network.sniffBluetooth.BT_on = false
Network.sniffBluetooth.BT_scan_deviceID = -1
Network.sniffBluetooth.BT_scan_length = 8

# --------------------------------------------------------
#                       BLE Sniffer                      #
# --------------------------------------------------------
Network.sniffBluetooth.BLE_on = false
Network.sniffBluetooth.BLE_scan_deviceID = -1
Network.sniffBluetooth.BLE_scan_time = 10s 

# BLE parameters: check page 973 (1255 of document) of BT spec 4.1

# 0x00: Passive scanning. No SCAN_REQ packets shall be sent
# 0x01: Active scanning. SCAN_REQ packets may be sent
Network.sniffBluetooth.BLE_scan_type = 0x01

# Time interval from when the Controller started its last LE scan 
# until it begins the subsequent LE scan.
# Range is 0x0004 to 0x4000 and Time is N * 0.625 msec
Network.sniffBluetooth.BLE_interval = 0x0010

# The duration of the LE scan. LE_Scan_Window shall be less than
# or equal to LE_Scan_Interval. Range is 0x0004 to 0x4000 and
# Time is N * 0.625 msec
Network.sniffBluetooth.BLE_window = 0x0010

# 0: Public Device Address
# 1: Random Device Address
Network.sniffBluetooth.BLE_own_type = 0x00

# 0: Accept all advertisement packets. Directed advertising packets 
# which are not addressed for this device shall be ignored.
# 1: Ignore advertisement packets from devices not in the White List Only.
# Directed advertising packets which are not addressed for this device
# shall be ignored.
Network.sniffBluetooth.BLE_filter_policy = 0x00 

# --------------------------------------------------------
#                     BLE advertisement                  #
# --------------------------------------------------------
Network.sniffBluetooth.BLE_advertisement = false
Network.sniffBluetooth.BLE_adv_deviceID = -1

# Advertisement parameters: check page 965 (1247 of document) of BT spec 4.1

# Minimum and Maximum advertising interval for undirected and low duty cycle directed advertising.
# Range is 0x0020 to 0x4000 and Time is  N * 0.625 msec
Network.sniffBluetooth.BLE_minInterval = 0x0800
Network.sniffBluetooth.BLE_maxInterval = 0x0800

# ADV_IND         0x00    // Connectable undirected advertising
# ADV_DIRECT_IND  0x01    // Connectable high duty cycle directed advertising
# ADV_SCAN_IND    0x02    // Scannable undirected advertising
# ADV_NONCONN_IND 0x03    // Non connectable undirected advertising
# ADV_SCAN_RSP    0x04
Network.sniffBluetooth.BLE_adv_type = 3

# 1: enable channel 37 
# 2: enable channel 38
# 4: enable channel 39
# 7: all channels are enabled
Network.sniffBluetooth.BLE_channelNumber = 7

# 0:iBeacon, 1:AltBeacon
Network.sniffBluetooth.BLE_beaconType = 0

# iBeacon parameters
Network.sniffBluetooth.iBeacon_UUID = ""
Network.sniffBluetooth.iBeacon_major = ""
Network.sniffBluetooth.iBeacon_minor = ""
Network.sniffBluetooth.iBeacon_TXpower = ""

# AltBeacon parameters
Network.sniffBluetooth.AltBeacon_MFGID = ""
Network.sniffBluetooth.AltBeacon_beaconID = ""
Network.sniffBluetooth.AltBeacon_refRSSI = ""
Network.sniffBluetooth.AltBeacon_MFGRSVD = ""

# --------------------------------------------------------
#              Sniffing BLE advertisement                #
# --------------------------------------------------------
Network.sniffBluetooth.dump_On = false
Network.sniffBluetooth.BLE_dump_deviceID = -1
Network.sniffBluetooth.sniff_time = -1s


##########################################################
#       Section 10: Adding Modules into simulation       #
##########################################################

# --------------------------------------------------------
#   AddEntity: adding vehicles, bikes, pedestrians        #
# --------------------------------------------------------
# mode = 1: for incident detection
# mode = 2: ACC
# mode = 3: for CACC stream or platoon
# mode = 4: for router
# mode = 5: platoon management
# mode = 6: bi-directional control
Network.addEntity.on = false
Network.addEntity.mode = -1
Network.addEntity.totalVehicles = 10
Network.addEntity.vehiclesType = "Type_CACC1"
Network.addEntity.distribution = 1    # 1: deterministic   # 2: poisson
Network.addEntity.interval = 1000ms   # insertion interval in deterministic distribution
Network.addEntity.lambda = 1300       # insertion rate [veh/h]

Network.addEntity.plnSize = 5
Network.addEntity.plnSpace = 3.5s
         
# mode 10, 11
Network.addEntity.overlap = 0                  # increasing the overlap, moves the peak more to the left in time
Network.addEntity.vehRouteDist = "70,30,0"     # through traffic, left turn, right turn
Network.addEntity.vehMultiClass = false        # turn on/off insertion of multi-class vehicles 
Network.addEntity.vehClassDist = "90,10"       # multi-class vehicle distribution (passenger vehicle (normal), emergency vehicle)
Network.addEntity.bike = false                 # turn on/off insertion of bikes
Network.addEntity.bikeRouteDist = "100,0,0"

# --------------------------------------------------------
#            AddFlow: adding flow of vehicle             #
# --------------------------------------------------------
Network.addFlow.on = false
Network.addFlow.flowFile = "flows.xml"
Network.addFlow.flowSetId = ""

# --------------------------------------------------------
#                         AddRSU                         #
# --------------------------------------------------------
Network.addRSU.on = false      
Network.addRSU.RSUfile = "RSUsLocation.xml" 
Network.addRSU.mode = -1 

# --------------------------------------------------------
#                      AddAdversary                      #
# --------------------------------------------------------
Network.addAdversary.on = false
Network.addAdversary.mode = -1


##########################################################
#          Section 11: Vehicle Parameters                #
##########################################################

# --------------------------------------------------------
#                Vehicle Application Layer               #
# --------------------------------------------------------
# general msg parameters
Network.V[*].appl.headerLength = 256 bit
Network.V[*].appl.debug = false
Network.V[*].appl.VANETenabled = true      # if false, vehicle beaconing is off throughout the simulation and you can not turn it on again!

# vehicle beacon msg parameters
Network.V[*].appl.sendBeacons = true   # you can turn beaconing off/on in any point
Network.V[*].appl.beaconInterval = 0.1s
Network.V[*].appl.maxOffset = 0.005s
Network.V[*].appl.beaconLengthBits = 512bit
Network.V[*].appl.beaconPriority = 3

Network.V[*].appl.signalBeaconing = false  # vehicles send beacons using signals rather than wireless broadcast. Any module
                                           # registered to signalBeaconing signal will receive the beacon 

# vehicle data msg parameters
Network.V[*].appl.dataOnSch = false
Network.V[*].appl.dataLengthBits = 1024bit
Network.V[*].appl.dataPriority = 2

# system msg parameters
Network.V[*].appl.requestRoutes = false
Network.V[*].appl.requestInterval = 60s
Network.V[*].appl.maxSystemOffset = 0.1s
Network.V[*].appl.systemMsgLengthBits = 512bit
Network.V[*].appl.systemMsgPriority = 2

# Automatic Incident Detection (AID)
Network.V[*].appl.AID = false

# general controller parameters
Network.V[*].appl.SUMOvehicleDebug = false  # controling SUMO debug output for "each vehicle"
Network.V[*].appl.degradeToACC = false
Network.V[*].appl.sonarDist = 900

# beacon loss ratio in application layer
Network.V[*].appl.plr = 0         # packet loss ratio (percent) in each simulation timeStep
Network.V[*].appl.droppT = 30s
Network.V[*].appl.droppV = ""     # plr for which vehicle? empty string means all

# measurement error
Network.V[*].appl.measurementError = false
Network.V[*].appl.errorGap = 0.01
Network.V[*].appl.errorRelSpeed = 0.05

# plnMode = 1: no platooning
# plnMode = 2: pre-defined platoon
# plnMode = 3: platoon management is active
Network.V[*].appl.plnMode = 1
Network.V[*].appl.preDefinedPlatoonID = "CACC1"    # only in plnMode = 2

# platoon management protocol (plnMode = 3)
Network.V[*].appl.maxPlatoonSize = 10
Network.V[*].appl.optPlatoonSize = 5
Network.V[*].appl.TP = 3.5s      # intra-platoon time-gap (between platoons)
Network.V[*].appl.TG1 = 0.55s    # inter-platoon time-gap 1 (between followers)
Network.V[*].appl.TG2 = 0.6s     # inter-platoon time-gap 2 (between followers)
Network.V[*].appl.adaptiveTG = true
Network.V[*].appl.coordinationMode = -1

Network.V[*].appl.entryEnabled = true
Network.V[*].appl.mergeEnabled = true
Network.V[*].appl.splitEnabled = true
Network.V[*].appl.followerLeaveEnabled = true
Network.V[*].appl.leaderLeaveEnabled = true

# --------------------------------------------------------
#                Vehicle NIC-Settings                    #
# --------------------------------------------------------
Network.V[*].nic.mac1609_4.useServiceChannel = false

Network.V[*].nic.mac1609_4.txPower = 20mW
Network.V[*].nic.mac1609_4.bitrate = 18Mbps

Network.V[*].nic.phy80211p.sensitivity = -89dBm
Network.V[*].nic.phy80211p.maxTXPower = 10mW
Network.V[*].nic.phy80211p.useThermalNoise = true
Network.V[*].nic.phy80211p.thermalNoise = -110dBm
Network.V[*].nic.phy80211p.decider = xmldoc("application/veins/config.xml")
Network.V[*].nic.phy80211p.analogueModels = xmldoc("application/veins/config.xml")
Network.V[*].nic.phy80211p.usePropagationDelay = true

# --------------------------------------------------------
#                  Vehicle Mobility                      #
# --------------------------------------------------------
Network.V[*].mobilityType = "TraCIMobilityMod"
Network.V[*].mobility.x = 0
Network.V[*].mobility.y = 0
Network.V[*].mobility.z = 0
#Network.V[*].mobility.accidentCount = 1
#Network.V[*].mobility.accidentStart = 10s
#Network.V[*].mobility.accidentDuration = 30s

# --------------------------------------------------------
#                         Warmup                         #
# --------------------------------------------------------
Network.warmup.on = false
Network.warmup.laneId = "1to2_0"
Network.warmup.stopPosition = 9
Network.warmup.warmUpSpeed = 0
Network.warmup.waitingTime = 15   # waiting time after all vehicles enter the simulation

# --------------------------------------------------------
#                   SpeedProfile                         #
# --------------------------------------------------------
# speedProfile modes:
# mode = 0: fixed speed
# mode = 1: accel/decel pulse
# mode = 2: accel/decel pulse (extreme)
# mode = 3: accel/decel pulse (stability test)
# mode = 4: accel/decel zik-zak 
# mode = 5: accel/decel periodic
# mode = 6: real stop-and-go traffic flow data (external file)
Network.speedprofile.on = false
Network.speedprofile.laneId = "1to2_0"
Network.speedprofile.startTime = -1s
Network.speedprofile.mode = 3
Network.speedprofile.minSpeed = 5
Network.speedprofile.normalSpeed = 20
Network.speedprofile.maxSpeed = 30
Network.speedprofile.switchTime = 40s  # waiting time between speed change
Network.speedprofile.trajectoryPath = "sumo/trajectory_StopAndGo.txt"


##########################################################
#                   Section 12: Router                   #
##########################################################

Network.router.enableRouter = false
Network.router.collectVehicleTimeData = false

Network.router.dijkstraOutdateTime = 5
Network.router.timePeriodMax = 250
Network.router.straightCost = 2.0
Network.router.rightTurnCost = 4.0
Network.router.leftTurnCost = 6.0
Network.router.uTurnCost = 6.0
Network.router.TLLookahead = 0
Network.router.createTime = 600
Network.router.vehicleCount = 800
Network.router.ReroutingVehiclePercent = 0.2
Network.router.UseHysteresis = true
Network.router.EWMARate = 0.2

Network.router.LaneCostsMode = 0
Network.router.HysteresisCount = 4

Network.router.UseAccidents = false
Network.router.AccidentCheckInterval = 5


##########################################################
#              Section 13: RSU Parameters                #
##########################################################

# --------------------------------------------------------
#                   RSU Application Layer                #
# --------------------------------------------------------
# general msg parameters
Network.RSU[*].appl.headerLength = 256 bit
Network.RSU[*].appl.debug = false

Network.RSU[*].appl.enableAID = false
Network.RSU[*].appl.printIncidentDetection = false

Network.RSU[*].appl.activeDetection = false      # if RSU should monitor the intersection activity?
Network.RSU[*].appl.collectVehApproach = false   # only if activeDetection = true

Network.RSU[*].appl.classifier = false
Network.RSU[*].appl.trainError = 0m   # adding error to training data
Network.RSU[*].appl.GPSerror = 0m     # adding error to received beacon

# RSU beacon msg parameters
Network.RSU[*].appl.sendBeacons = false
Network.RSU[*].appl.beaconInterval = 1s
Network.RSU[*].appl.maxOffset = 0.005s
Network.RSU[*].appl.beaconLengthBits = 512bit
Network.RSU[*].appl.beaconPriority = 3

Network.RSU[*].appl.myTLid = ""      # the associated TL to this RSU
Network.RSU[*].appl.myCoordX = -1    # my X coordinate in SUMO
Network.RSU[*].appl.myCoordY = -1    # my Y coordinate in SUMO

# --------------------------------------------------------
#                    RSU NIC-Settings                    #
# --------------------------------------------------------
Network.RSU[*].nic.mac1609_4.useServiceChannel = false

Network.RSU[*].nic.mac1609_4.txPower = 20mW
Network.RSU[*].nic.mac1609_4.bitrate = 18Mbps

Network.RSU[*].nic.phy80211p.sensitivity = -89dBm
Network.RSU[*].nic.phy80211p.maxTXPower = 10mW
Network.RSU[*].nic.phy80211p.useThermalNoise = true
Network.RSU[*].nic.phy80211p.thermalNoise = -110dBm
Network.RSU[*].nic.phy80211p.decider = xmldoc("application/veins/config.xml")
Network.RSU[*].nic.phy80211p.analogueModels = xmldoc("application/veins/config.xml")
Network.RSU[*].nic.phy80211p.usePropagationDelay = true

# --------------------------------------------------------
#                     RSU Mobility                       #
# --------------------------------------------------------
Network.RSU[*].mobilityType = "RSUMobility"
Network.RSU[*].mobility.x = 0
Network.RSU[*].mobility.y = 0
Network.RSU[*].mobility.z = 0


#########################################################
#         Section 14: Adversary Parameters              #
#########################################################

# --------------------------------------------------------
#             Adversary Application Layer                #
# --------------------------------------------------------
Network.adversary[*].appl.AttackT = 100
Network.adversary[*].appl.headerLength = 256 bit
Network.adversary[*].appl.falsificationAttack = false
Network.adversary[*].appl.replayAttack = false 
Network.adversary[*].appl.jammingAttack = false  

# --------------------------------------------------------
#                Adversary NIC-Settings                  #
# --------------------------------------------------------
Network.adversary[*].nic.mac1609_4.useServiceChannel = false

Network.adversary[*].nic.mac1609_4.txPower = 20mW
Network.adversary[*].nic.mac1609_4.bitrate = 18Mbps

Network.adversary[*].nic.phy80211p.sensitivity = -89dBm
Network.adversary[*].nic.phy80211p.maxTXPower = 10mW
Network.adversary[*].nic.phy80211p.useThermalNoise = true
Network.adversary[*].nic.phy80211p.thermalNoise = -110dBm
Network.adversary[*].nic.phy80211p.decider = xmldoc("application/veins/config.xml")
Network.adversary[*].nic.phy80211p.analogueModels = xmldoc("application/veins/config.xml")
Network.adversary[*].nic.phy80211p.usePropagationDelay = true

# --------------------------------------------------------
#                 Adversary Mobility                     #
# --------------------------------------------------------
Network.adversary[*].mobilityType = "ConstSpeedMobility"
Network.adversary[*].mobility.x = 1070
Network.adversary[*].mobility.y = 0
Network.adversary[*].mobility.z = 0
Network.adversary[*].mobility.speed = 0 mps


##########################################################
#          Section 15: Bicycle Parameters                #
##########################################################

# --------------------------------------------------------
#               Bicycle Application Layer             #
# --------------------------------------------------------
# general msg parameters
Network.B[*].appl.headerLength = 256 bit
Network.B[*].appl.debug = false
Network.B[*].appl.VANETenabled = true  # non-changable during simulation

# Bicycle beacon msg parameters
Network.B[*].appl.sendBeacons = false  # changable during simulation
Network.B[*].appl.beaconInterval = 0.1s
Network.B[*].appl.maxOffset = 0.005s
Network.B[*].appl.beaconLengthBits = 512bit
Network.B[*].appl.beaconPriority = 3

Network.B[*].appl.signalBeaconing = false 

# Bicycle data msg parameters
Network.B[*].appl.dataOnSch = false
Network.B[*].appl.dataLengthBits = 1024bit
Network.B[*].appl.dataPriority = 2

# --------------------------------------------------------
#               Bicycle NIC-Settings                  #
# --------------------------------------------------------
Network.B[*].nic.mac1609_4.useServiceChannel = false

Network.B[*].nic.mac1609_4.txPower = 20mW
Network.B[*].nic.mac1609_4.bitrate = 18Mbps

Network.B[*].nic.phy80211p.sensitivity = -89dBm
Network.B[*].nic.phy80211p.maxTXPower = 10mW
Network.B[*].nic.phy80211p.useThermalNoise = true
Network.B[*].nic.phy80211p.thermalNoise = -110dBm
Network.B[*].nic.phy80211p.decider = xmldoc("application/veins/config.xml")
Network.B[*].nic.phy80211p.analogueModels = xmldoc("application/veins/config.xml")
Network.B[*].nic.phy80211p.usePropagationDelay = true

# --------------------------------------------------------
#                 Bicycle Mobility                    #
# --------------------------------------------------------
Network.B[*].mobilityType = "TraCIMobilityMod"
Network.B[*].mobility.x = 0
Network.B[*].mobility.y = 0
Network.B[*].mobility.z = 0
#Network.B[*].mobility.accidentCount = 1
#Network.B[*].mobility.accidentStart = 10s
#Network.B[*].mobility.accidentDuration = 30s


##########################################################
#         Section 16: Pedestrian Parameters              #
##########################################################

# --------------------------------------------------------
#               Pedestrian Application Layer             #
# --------------------------------------------------------
# general msg parameters
Network.P[*].appl.headerLength = 256 bit
Network.P[*].appl.debug = false
Network.P[*].appl.VANETenabled = true   # non-changable during simulation

# Pedestrian beacon msg parameters
Network.P[*].appl.sendBeacons = false   # changable during simulation
Network.P[*].appl.beaconInterval = 0.1s
Network.P[*].appl.maxOffset = 0.005s
Network.P[*].appl.beaconLengthBits = 512bit
Network.P[*].appl.beaconPriority = 3

# Pedestrian data msg parameters
Network.P[*].appl.dataOnSch = false
Network.P[*].appl.dataLengthBits = 1024bit
Network.P[*].appl.dataPriority = 2

# --------------------------------------------------------
#               Pedestrian NIC-Settings                  #
# --------------------------------------------------------
Network.P[*].nic.mac1609_4.useServiceChannel = false

Network.P[*].nic.mac1609_4.txPower = 20mW
Network.P[*].nic.mac1609_4.bitrate = 18Mbps

Network.P[*].nic.phy80211p.sensitivity = -89dBm
Network.P[*].nic.phy80211p.maxTXPower = 10mW
Network.P[*].nic.phy80211p.useThermalNoise = true
Network.P[*].nic.phy80211p.thermalNoise = -110dBm
Network.P[*].nic.phy80211p.decider = xmldoc("application/veins/config.xml")
Network.P[*].nic.phy80211p.analogueModels = xmldoc("application/veins/config.xml")
Network.P[*].nic.phy80211p.usePropagationDelay = true

# --------------------------------------------------------
#                 Pedestrian Mobility                    #
# --------------------------------------------------------
Network.P[*].mobilityType = "TraCIMobilityMod"
Network.P[*].mobility.x = 0
Network.P[*].mobility.y = 0
Network.P[*].mobility.z = 0
#Network.P[*].mobility.accidentCount = 1
#Network.P[*].mobility.accidentStart = 10s
#Network.P[*].mobility.accidentDuration = 30s

