
include params1_General.ini

##########################################################
#                     Section 1                          #
##########################################################

[Config TrafficSignalControl]
description = "Complete (isolated) intersection with vehicles, bikes, and pedestrians"

Network.debugLevel = 2

Network.Tracking.mode = 0
Network.Tracking.zoom = 2554.76

Network.TraCI.SUMOconfig = "sumo/pedestrian/sumo.cfg"
Network.TraCI.terminate = -1s
Network.TraCI.updateInterval = 0.1s
Network.TraCI.collectVehiclesData = false   # optional
Network.TraCI.vehicleDataLevel = 3

# TLControlMode = 0: no traffic light
# TLControlMode = 1: fix-time
# TLControlMode = 2: adaptive Webster
# TLControlMode = 3: traffic actuated
# TLControlMode = 4: LQF (with no starvation)
# TLControlMode = 5: OJF (lowest delay)
# TLControlMode = 6: LQF_MWM (has starvation)
# TLControlMode = 7: LQF_MWM_Aging
# TLControlMode = 8: LQF_MWM_Cycle
# TLControlMode = 9: FMSC
# TLControlMode = 10: router
Network.TrafficLight.TLControlMode = ${TLControl= 3}    #${TLControl= 1, 3, 4, 5}    #${TLControl= 3, 3, 4, 4}  

# test performance with and without active detection
# Network.TrafficLight.passageTime = ${passage= 2s, -1s, -1s, -1s ! TLControl}
# Network.TrafficLight.maxQueueSize = ${maxQ=  -1,  -1,   5,  -1  ! TLControl}

# collect performance results from all TSC algorithms
Network.TrafficLight.collectTLQueuingData = true
Network.TrafficLight.collectTLPhasingData = true
Network.TrafficLight.collectVehDelay = true

Network.V[*].appl.VANETenabled = ${TLControl} >= 6 ? true : false    # enable this only when we need active detection!
Network.V[*].appl.signalBeaconing = true   # vehicles send beacons as a signal

Network.B[*].appl.sendBeacons = ${TLControl} >= 6 ? true : false
Network.B[*].appl.signalBeaconing = true

Network.addEntity.on = true
Network.addEntity.mode = ${addEntity= 10, 11}
Network.addEntity.vehRouteDist = ${routeDist= "50,50,0", "70,30,0"}
Network.addEntity.vehMultiClass = true
Network.addEntity.bike = true

Network.addRSU.on = ${TLControl} >= 6 ? true : false  # enable this only when we need active detection!
Network.addRSU.mode = 1    # add RSUs based on the RSUsLocation.xml file

##############################

[Config Classification]
description = "Classification of the multi-modal traffic"

Network.TraCI.SUMOconfig = "sumo/classification/sumo.cfg" 
Network.debugLevel = 1

Network.TraCI.terminate = 300s
Network.TraCI.updateInterval = 0.1s
Network.TraCI.roiSquareSizeRSU = 80

# repeat each scenario with a different random seed
repeat = 5
seed-0-mt= ${1, 2, 3, 4 ,5 ! repetition}

# set traffic light to fixed-time 
Network.TrafficLight.TLControlMode = 1  

# all entities broadcast beacon
Network.V[*].appl.sendBeacons = true 
Network.B[*].appl.sendBeacons = true
Network.P[*].appl.sendBeacons = true

Network.RSU[*].appl.classifier = true
Network.RSU[*].appl.trainError = 3m
Network.RSU[*].appl.GPSerror = ${GPSerror= 0m, 0.5m, 1m, 3m, 5m, 7m, 10m}

Network.plotter.on = true

Network.addEntity.on = true
Network.addEntity.mode = 10
Network.addEntity.vehRouteDist = "70,30,0"
Network.addEntity.vehMultiClass = false
Network.addEntity.bike = true

Network.addRSU.on = true
Network.addRSU.mode = 1    # add RSUs based on the RSUsLocation.xml file

##############################

[Config CrossWalk]
description = "Cross walk and safe passing"

Network.TraCI.SUMOconfig = "sumo/crossWalk/6hello.sumo.cfg"
Network.debugLevel = 0

Network.TraCI.terminate = -1s
Network.TraCI.updateInterval = 1s

Network.V[*].appl.VANETenabled = false

